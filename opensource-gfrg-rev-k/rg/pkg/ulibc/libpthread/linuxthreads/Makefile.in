# Makefile for uClibc
#
# Copyright (C) 2003 Paul Mundt <lethal@linux-sh.org>
# Copyright (C) 2000-2006 Erik Andersen <andersen@uclibc.org>
#
# Licensed under the LGPL v2.1, see the file COPYING.LIB in this tarball.
#

JMK_CFLAGS-dir_linuxthreads := -DNOT_IN_libc -DIS_IN_libpthread
JMK_CFLAGS-linuxthreads := $(JMK_CFLAGS-dir_linuxthreads) $(SSP_ALL_CFLAGS)

JMK_CFLAGS-libpthread/linuxthreads/sysdeps/$(TARGET_ARCH)/ := $(JMK_CFLAGS-linuxthreads)
JMK_CFLAGS-libpthread/linuxthreads/sysdeps/unix/sysv/linux/ := $(JMK_CFLAGS-linuxthreads)
JMK_CFLAGS-libpthread/linuxthreads/sysdeps/pthread/         := $(JMK_CFLAGS-linuxthreads)

# This stuff will not compile without at least -O1
# psm: can't handle this here, could maybe search for -O0 in JMK_CFLAGS
# and append -O1 if found
#JMK_CFLAGS:=$(JMK_CFLAGS:-O0=-O1)

ifeq ($(PTHREADS_DEBUG_SUPPORT),y)
JMK_LDFLAGS-libpthread.so := $(JMK_LDFLAGS_NOSTRIP) -z defs
else
JMK_LDFLAGS-libpthread.so := $(JMK_LDFLAGS)
endif

LIBS-libpthread.so := $(LIBS) $(ldso)

START_FILE-libpthread.so := $(SHARED_START_FILES)
END_FILE-libpthread.so := $(SHARED_END_FILES)

libpthread_FULL_NAME := libpthread-$(VERSION).so

libpthread_DIR := $(top_srcdir)libpthread/linuxthreads
libpthread_OUT := $(top_builddir)libpthread/linuxthreads

-include $(libpthread_DIR)/sysdeps/$(TARGET_ARCH)/Makefile.arch

pthread_arch_SRC   := pspinlock
pthread_arch_SRC   := $(patsubst %,$(libpthread_DIR)/sysdeps/$(TARGET_ARCH)/%.c,$(pthread_arch_SRC))
pthread_linux_SRC  := fork pt-sigsuspend register-atfork unregister-atfork
pthread_linux_SRC  := $(patsubst %,$(libpthread_DIR)/sysdeps/unix/sysv/linux/%.c,$(pthread_linux_SRC))
pthread_sysdep_SRC := errno-loc herrno-loc ptlongjmp
pthread_sysdep_SRC := $(patsubst %,$(libpthread_DIR)/sysdeps/pthread/%.c,$(pthread_sysdep_SRC))

libpthread_SPEC_SRC := pthread.c
libpthread_SPEC_SRC := $(patsubst %.c,$(libpthread_DIR)/%.c,$(libpthread_SPEC_SRC))

pthread_SRC := \
	attr barrier cancel condvar errno events join \
	lockfile manager mutex pt-machine ptcleanup \
	ptclock_gettime ptclock_settime ptfork pthandles \
	pthread_setegid pthread_seteuid pthread_setgid pthread_setregid \
	pthread_setresgid pthread_setresuid pthread_setreuid pthread_setuid \
	rwlock semaphore sighandler signals specific spinlock
pthread_SRC := $(patsubst %,$(libpthread_DIR)/%.c,$(pthread_SRC))

libpthread_static_SRC := pthread_atfork
libpthread_SRC := $(pthread_arch_SRC) $(pthread_linux_SRC) $(pthread_sysdep_SRC) $(pthread_SRC)
libpthread_OBJ := $(patsubst $(libpthread_DIR)/%.c,$(libpthread_OUT)/%.o,$(libpthread_SRC))

#
# Stuff that goes into libc.so, not libpthread.so
#
#JMK_CFLAGS-OMIT-alloca_cutoff.c := $(JMK_CFLAGS-dir_linuxthreads)
JMK_CFLAGS-OMIT-forward.c := $(JMK_CFLAGS-dir_linuxthreads)
JMK_CFLAGS-OMIT-libc-cancellation.c := $(JMK_CFLAGS-dir_linuxthreads)
JMK_CFLAGS-OMIT-libc_pthread_init.c := $(JMK_CFLAGS-dir_linuxthreads)
libpthread_libc_CSRC := \
	forward.c libc-cancellation.c libc_pthread_init.c # alloca_cutoff.c
libpthread_libc_OBJ  := $(patsubst %.c, $(libpthread_OUT)/%.o,$(libpthread_libc_CSRC))
libc-static-y += $(libpthread_OUT)/libc_pthread_init.o
libc-static-y += $(libpthread_OUT)/libc-cancellation.o
libc-shared-y += $(libpthread_libc_OBJ:.o=.oS)

libpthread-static-y += $(patsubst %,$(libpthread_OUT)/%.o,$(libpthread_static_SRC)) $(libpthread_SPEC_SRC:.c=.o)

#libpthread-nonshared-y += $(patsubst %,$(libpthread_OUT)/%.oS,$(libpthread_static_SRC))
libpthread-shared-y += $(patsubst $(libpthread_DIR)/%.c,$(libpthread_OUT)/%.oS,$(libpthread_SPEC_SRC))

ifeq ($(DOPIC),y)
libpthread-a-y  += $(libpthread_OBJ:.o=.os) $(libpthread-static-y:.o=.os)
else
libpthread-a-y  += $(libpthread_OBJ) $(libpthread-static-y)
endif
libpthread-so-y += $(libpthread_OBJ:.o=.os) $(libpthread-shared-y)

lib-a-$(UCLIBC_HAS_THREADS) += $(top_builddir)lib/libpthread.a
lib-so-$(UCLIBC_HAS_THREADS) += $(top_builddir)lib/libpthread.so
objclean-y += libpthread_clean
headers-$(UCLIBC_HAS_THREADS) += linuxthreads_headers
headers_clean-y += linuxthreads_headers_clean

#ifeq ($(DOMULTI),n)
$(top_builddir)lib/libpthread.so: $(libpthread_OUT)/libpthread_so.a $(libc) $(top_builddir)lib/libpthread_nonshared.a
	$(call link.so,$(libpthread_FULL_NAME),$(MAJOR_VERSION))
#else
#$(top_builddir)lib/libpthread.so: $(libpthread_OUT)/libpthread.oS | $(libc) $(top_builddir)lib/libpthread_nonshared.a
#	$(call linkm.so,$(libpthread_FULL_NAME),$(MAJOR_VERSION))
#endif
	$(Q)$(RM) $@
	$(Q)cp $(top_srcdir)extra/scripts/format.lds $@
	$(Q)echo "GROUP ( $(notdir $@).$(MAJOR_VERSION) libpthread_nonshared.a )" >> $@

$(libpthread_OUT)/libpthread_so.a: $(libpthread-so-y)
	$(Q)$(RM) $@
ifeq ($(PTHREADS_DEBUG_SUPPORT),y)
	$(do_strip:-x=-X --strip-debug)
else
	$(do_strip)
endif
	$(do_ar)

$(libpthread_OUT)/libpthread.oS: $(libpthread_SRC) $(libpthread_SPEC_SRC)
	$(Q)$(RM) $@
	$(compile-m)
ifeq ($(PTHREADS_DEBUG_SUPPORT),y)
	$(do_t_strip:-x=-X --strip-debug)
else
	$(do_t_strip)
endif

$(top_builddir)lib/libpthread.a: $(libpthread-a-y)
	$(Q)$(INSTALL) -d $(dir $@)
	$(Q)$(RM) $@
ifeq ($(PTHREADS_DEBUG_SUPPORT),y)
	$(do_strip:-x=-X --strip-debug)
else
	$(do_strip)
endif
	$(do_ar)

linuxthreads_headers:
	$(Q)$(LN) -sf ../$(PTDIR)/sysdeps/pthread/pthread.h $(top_builddir)include/
	$(Q)$(LN) -sf ../$(PTDIR)/semaphore.h $(top_builddir)include/
	$(Q)$(INSTALL) -d $(top_builddir)include/bits
	$(Q)$(LN) -sf ../../$(PTDIR)/sysdeps/pthread/bits/pthreadtypes.h $(top_builddir)include/bits/

linuxthreads_headers_clean:
	$(RM) $(top_builddir)include/pthread.h $(top_builddir)include/semaphore.h \
		$(top_builddir)include/bits/pthreadtypes.h

libpthread_clean:
	$(RM) $(libpthread_OUT)/{,*/,*/*/,*/*/*/,*/*/*/*/}*.{o,os,oS,a}
